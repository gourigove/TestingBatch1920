<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="53234" started-at="2020-09-28T20:25:58 IST" finished-at="2020-09-28T20:26:51 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="53234" started-at="2020-09-28T20:25:58 IST" finished-at="2020-09-28T20:26:51 IST">
      <class name="com.model.WebDataprovider">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="openBrowser" is-config="true" duration-ms="20779" started-at="2020-09-28T20:25:37 IST" finished-at="2020-09-28T20:25:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="enterUrl()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="enterUrl" is-config="true" duration-ms="15236" started-at="2020-09-28T20:25:58 IST" finished-at="2020-09-28T20:26:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterUrl -->
        <test-method status="PASS" signature="maximizePage()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="maximizePage" is-config="true" duration-ms="26078" started-at="2020-09-28T20:26:13 IST" finished-at="2020-09-28T20:26:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maximizePage -->
        <test-method status="PASS" signature="getCookies()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="getCookies" is-config="true" duration-ms="171" started-at="2020-09-28T20:26:39 IST" finished-at="2020-09-28T20:26:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCookies -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.model.WebDataprovider@5c5a1b69]" name="login" duration-ms="8644" started-at="2020-09-28T20:26:39 IST" data-provider="getdata" finished-at="2020-09-28T20:26:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[gouri]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gove]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[gourigov@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="captureScreenShot()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="captureScreenShot" is-config="true" duration-ms="960" started-at="2020-09-28T20:26:48 IST" finished-at="2020-09-28T20:26:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenShot -->
        <test-method status="PASS" signature="getCookies()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="getCookies" is-config="true" duration-ms="20" started-at="2020-09-28T20:26:49 IST" finished-at="2020-09-28T20:26:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCookies -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.model.WebDataprovider@5c5a1b69]" name="login" duration-ms="1448" started-at="2020-09-28T20:26:49 IST" data-provider="getdata" finished-at="2020-09-28T20:26:50 IST">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at com.model.WebDataprovider.login(WebDataprovider.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="captureScreenShot()[pri:0, instance:com.model.WebDataprovider@5c5a1b69]" name="captureScreenShot" is-config="true" duration-ms="507" started-at="2020-09-28T20:26:50 IST" finished-at="2020-09-28T20:26:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenShot -->
      </class> <!-- com.model.WebDataprovider -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
